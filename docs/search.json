[{"path":"/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to PRE2DUP-R","text":"install PRE2DUPR package, can use following command R: use PRE2DUPR package, can start loading R session:","code":"install.packages(\"devtools\") devtools::install_github(\"piavat/PRE2DUP-R\") library(PRE2DUPR)"},{"path":"/articles/introduction.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to PRE2DUP-R","text":"PRE2DUPR package comes example datasets can use test functionality PRE2DUP algorithm. datasets include: purchases_example: dataset containing drug purchase records. hospitalizations_example: dataset containing hospital admission records. package_parameters_example: dataset containing package characteristics. ATC_parameters_example: dataset containing ATC code characteristics. data types associated functions validate input running pre2dup. functions called internally program, don’t need run manually unless want check data beforehand. recommended run checks advance detect correct errors easily efficiently. Note internal checks pre2dup display first five rows detected errors. run separately, rows issues can listed adjusting function parameter print_all = TRUE.","code":""},{"path":"/articles/introduction.html","id":"drug-purchases-data","dir":"Articles","previous_headings":"","what":"Drug purchases data","title":"Introduction to PRE2DUP-R","text":"Drug purchases records information purchase drugs, including person made purchase, drug’s ATC code, package ID, date purchase, number packages purchased, amount DDDs (Defined Daily Doses).","code":""},{"path":"/articles/introduction.html","id":"data-validation","dir":"Articles","previous_headings":"Drug purchases data","what":"Data validation","title":"Introduction to PRE2DUP-R","text":"Function check_purchases checks data running PRE2DUP algorithm. ensures dataset meets necessary requirements algorithm function correctly.","code":"check_purchases(dt = purchases_example,                  pre_person_id = \"id\",                 pre_atc = \"ATC\",                 pre_package_id = \"vnr\",                 pre_date = \"purchase_date\",                 pre_ratio = \"n_packages\",                 pre_ddd = \"amount\",                 print_all = TRUE)                  Checks passed for ‘purchases_example’"},{"path":"/articles/introduction.html","id":"hospitalizations-data","dir":"Articles","previous_headings":"","what":"Hospitalizations data","title":"Introduction to PRE2DUP-R","text":"Hospitalizations records hospital admissions, including person ID, admission date, discharge date. data used assess impact hospitalizations drug exposure periods.","code":""},{"path":"/articles/introduction.html","id":"data-validation-1","dir":"Articles","previous_headings":"Hospitalizations data","what":"Data validation","title":"Introduction to PRE2DUP-R","text":"Function check_hospitalizations checks data running PRE2DUP algorithm.","code":"check_hospitalizations(dt = hospitalizations_example,                        hosp_person_id = \"id\",                        hosp_admission = \"hospital_start\",                        hosp_discharge = \"hospital_end\",                        print_all = TRUE)                  Checks passed for ‘hospitalizations_example’"},{"path":"/articles/introduction.html","id":"package-parameters","dir":"Articles","previous_headings":"","what":"Package parameters","title":"Introduction to PRE2DUP-R","text":"Package parameters used define characteristics drug packages. parameter file specifies identifying number, ATC code, minimum, usual, maximum duration package, well usual minimum dose defined daily doses (DDDs). Intruction show create package parameters Package Parameters tutorial.","code":""},{"path":"/articles/introduction.html","id":"data-validation-2","dir":"Articles","previous_headings":"Package parameters","what":"Data validation","title":"Introduction to PRE2DUP-R","text":"Function check_package_parameters checks data running PRE2DUP algorithm.","code":"check_package_parameters(dt = package_parameters_example,                           pack_atc = \"ATC\",                          pack_id = \"vnr\",                          pack_ddd_low = \"lower_ddd\",                           pack_ddd_usual = \"usual_ddd\",                          pack_dur_min = \"minimum_dur\",                          pack_dur_usual = \"usual_dur\",                           pack_dur_max = \"maximum_dur\",                          print_all = FALSE)                  Checks passed for ‘package_parameters_example’"},{"path":"/articles/introduction.html","id":"atc-parameters","dir":"Articles","previous_headings":"","what":"ATC parameters","title":"Introduction to PRE2DUP-R","text":"ATC parameters used define characteristics ATC codes package-specific information available. ATC parameters file specifies partial full ATC code, lower limit daily dose, usual daily dose, minimum maximum allowed treatment durations. Package example data ATC_parameters can used example create ATC code characteristics dataset.","code":""},{"path":"/articles/introduction.html","id":"data-validation-3","dir":"Articles","previous_headings":"ATC parameters","what":"Data validation","title":"Introduction to PRE2DUP-R","text":"Function check_atc_parameters checks ATC parameters data running PRE2DUP algorithm.","code":"check_atc_parameters(dt = ATC_parameters,                      atc_class = \"partial_atc\",                      atc_ddd_low = \"lower_ddd_atc\",                      atc_ddd_usual = \"usual_ddd_atc\",                       atc_dur_min = \"minimum_dur_atc\",                      atc_dur_max = \"maximum_dur_atc\",                      print_all = TRUE)                  Checks passed for ‘ATC_parameters’."},{"path":"/articles/introduction.html","id":"running-the-pre2dup","dir":"Articles","previous_headings":"","what":"Running the PRE2DUP","title":"Introduction to PRE2DUP-R","text":"PRE2DUP algorithm creation drug use periods run using pre2dup function. function process drug purchase data, hospitalizations, package parameters, ATC parameters estimate drug exposure.","code":"pre2dup(   pre_data = purchases_example,   pre_person_id = \"id\",   pre_atc = \"ATC\",   pre_package_id = \"vnr\",   pre_date = \"purchase_date\",   pre_ratio = \"n_packages\",   pre_ddd = \"amount\",   package_parameters = package_parameters_example,   pack_atc = \"ATC\",   pack_id = \"vnr\",   pack_ddd_low = \"lower_ddd\",   pack_ddd_usual =\"usual_ddd\",   pack_dur_min = \"minimum_dur\",   pack_dur_usual = \"usual_dur\",   pack_dur_max = \"maximum_dur\",   atc_parameters = ATC_parameters,   atc_class = \"partial_atc\",   atc_ddd_low = \"lower_ddd_atc\",   atc_ddd_usual = \"usual_ddd_atc\",   atc_dur_min = \"minimum_dur_atc\",   atc_dur_max = \"maximum_dur_atc\",   hosp_data = hospitalizations_example,   hosp_person_id = \"id\",   hosp_admission = \"hospital_start\",   hosp_discharge = \"hospital_end\",   date_range = c(\"2025-01-01\", \"2025-12-31\"),   global_gap_max = 300,   global_min = 5,   global_max = 300,   global_max_single = 150,   global_ddd_high = 10,   global_hosp_max = 30,   weight_past = 1,   weight_current = 4,   weight_next = 1,   weight_first_last = 5,   calculate_pack_dur_usual = T,   days_covered = 5,   post_process_perc = 1)    Step 1/6: Checking parameters and datasets... Checks passed for ‘pre_data’ Checks passed for ‘package_parameters’ Checks passed for ‘atc_parameters’. Checks passed for ‘hosp_data’ Step 2/6: Calculating purchase durations... Step 3/6: Stockpiling assessment... Step 4/6: Calculating common package durations in data... Refill lengths couldn’t be re-estimated, probably due to too small data size. Step 5/6: Preparing drug use periods... Step 6/6: Post-processing drug use periods... Current post processing percentage: 1 Drug use periods calculated. 7 periods created for 5 persons. $periods    period     id     ATC  dup_start    dup_end dup_days dup_hospital_days dup_n_purchases dup_last_purchase dup_total_DDD dup_temporal_average_DDDs     <int> <fctr>  <char>     <Date>     <Date>    <num>             <num>           <int>            <Date>         <num>                     <num> 1:      1      1 N05AH02 2025-01-01 2025-04-14      104                 0               3        2025-03-08         99.99                     0.961 2:      2      2 N05AH02 2025-01-15 2025-04-28      104                 5               3        2025-03-22         99.99                     0.961 3:      3      3 N05AH02 2025-02-01 2025-05-15      104                 0               3        2025-04-08         99.99                     0.961 4:      4      3 N05AH04 2025-01-05 2025-08-26      233                 0               2        2025-04-15        200.00                     0.858 5:      5      4 N05AH02 2025-01-10 2025-04-23      104                 0               3        2025-03-17         99.99                     0.961 6:      6      4 N05AH04 2025-01-20 2025-09-10      233                 0               2        2025-04-30        200.00                     0.858 7:      7      5 N05AH04 2025-01-01 2025-08-22      233                38               2        2025-04-11        200.00                     0.858  $pack_info NULL"},{"path":"/articles/introduction.html","id":"workflow-when-using-estimated-usual-package-durations-from-data","dir":"Articles","previous_headings":"","what":"Workflow when using estimated usual package durations from data","title":"Introduction to PRE2DUP-R","text":"pre2dup function option estimate usual package durations data. useful want derive package durations based actual purchase patterns dataset. Set calculate_pack_dur_usual = T, run program update package parameters based common duration data. questions support, feel free reach package maintainers …","code":"# Make data so big, that it can calculate common durations id <- sort(rep(1:5, each = 20)) vnr <- rep(c(rep(30627, 10), rep(41738, 10)), 5) atc <- rep(c(rep(\"N05AH02\", 10), rep(\"N05AH04\", 10)), 5) d40 <- as.Date(\"2020-01-01\")  + 40*1:10 d120 <- as.Date(\"2022-01-01\")  + 120*1:10 dates <- rep(c(d40, d120), 5) ddds <- rep(c(rep(33, 10), rep(80, 10)), 5) ratio <- rep(1, 100) purchases_data <- data.frame(id, vnr, atc, dates, ddds, ratio)  # This example uses function default values, they can be changed to fit your needs. outdata <-pre2dup(   pre_data = purchases_data,   pre_person_id = \"id\",   pre_atc = \"atc\",   pre_package_id = \"vnr\",   pre_date = \"dates\",   pre_ratio = \"ratio\",   pre_ddd = \"ddds\",   package_parameters = package_parameters_example,   pack_atc = \"ATC\",   pack_id = \"vnr\",   pack_ddd_low = \"lower_ddd\",   pack_ddd_usual =\"usual_ddd\",   pack_dur_min = \"minimum_dur\",   pack_dur_usual = \"usual_dur\",   pack_dur_max = \"maximum_dur\",   atc_parameters = ATC_parameters,   atc_class = \"partial_atc\",   atc_ddd_low = \"lower_ddd_atc\",   atc_ddd_usual = \"usual_ddd_atc\",   atc_dur_min = \"minimum_dur_atc\",   atc_dur_max = \"maximum_dur_atc\",   calculate_pack_dur_usual = T )    Step 1/6: Checking parameters and datasets... Checks passed for ‘pre_data’ Checks passed for ‘package_parameters’ Checks passed for ‘atc_parameters’. Step 2/6: Calculating purchase durations... Step 3/6: Stockpiling assessment... Step 4/6: Calculating common package durations in data... Step 5/6: Preparing drug use periods... Step 6/6: Post-processing drug use periods... Current post processing percentage: 1 Drug use periods calculated. 10 periods created for 5 persons.  # Save updated package parameters updated_params <- outdata$pack_info # Check new common durations updated_params[!is.na(updated_params$common_duration), ]     vnr     ATC product_name strength strength_num packagesize packsize_num drug_form_harmonized ddd_per_pack minimum_dur usual_dur maximum_dur lower_ddd usual_ddd common_duration usual_duration_new 6 30627 N05AH02      LEPONEX    100MG          100         100          100               TABLET     33.33333          25     33.33         100    0.3333      1.00              40                 40 8 41738 N05AH04    KETIPINOR    300MG          300      100FOL          100               TABLET     75.00000          50    100.00         200    0.3750      0.75             120                120  # Make a new common duration column selecting the common duration from the updated package parameters by your choice updated_params$usual_duration_new <- ifelse(   !is.na(updated_params2$common_duration),   updated_params2$common_duration,   updated_params2$usual_dur )  # Run PRE2DUP with the updated package parameters outdata <-pre2dup(   pre_data = purchases_data,   pre_person_id = \"id\",   pre_atc = \"atc\",   pre_package_id = \"vnr\",   pre_date = \"dates\",   pre_ratio = \"ratio\",   pre_ddd = \"ddds\",   package_parameters = updated_params,   pack_atc = \"ATC\",   pack_id = \"vnr\",   pack_ddd_low = \"lower_ddd\",   pack_ddd_usual =\"usual_ddd\",   pack_dur_min = \"minimum_dur\",   pack_dur_usual = \"usual_duration_new\", # This is the new column   pack_dur_max = \"maximum_dur\",   atc_parameters = ATC_parameters,   atc_class = \"partial_atc\",   atc_ddd_low = \"lower_ddd_atc\",   atc_ddd_usual = \"usual_ddd_atc\",   atc_dur_min = \"minimum_dur_atc\",   atc_dur_max = \"maximum_dur_atc\",   calculate_pack_dur_usual = F # Not needed anymore, as we have updated package parameters ) Step 1/6: Checking parameters and datasets... Checks passed for ‘pre_data’ Checks passed for ‘package_parameters’ Checks passed for ‘atc_parameters’. Step 2/6: Calculating purchase durations... Step 3/6: Stockpiling assessment... Step 4/6: Common package duration calculation was not selected in the parameters; skipping this step. Step 5/6: Preparing drug use periods... Step 6/6: Post-processing drug use periods... Current post processing percentage: 1 Drug use periods calculated. 10 periods created for 5 persons.  # The final output final_periods <- outdata$periods final_periods    period     id     atc  dup_start    dup_end dup_days dup_hospital_days dup_n_purchases dup_last_purchase dup_total_DDD dup_temporal_average_DDDs      <int> <fctr>  <char>     <Date>     <Date>    <num>             <num>           <int>            <Date>         <num>                     <num>  1:      1      1 N05AH02 2020-02-10 2021-03-23      408                 0              10        2021-02-04           330                     0.809  2:      2      1 N05AH04 2022-05-01 2025-09-05     1224                 0              10        2025-04-15           800                     0.654  3:      3      2 N05AH02 2020-02-10 2021-03-23      408                 0              10        2021-02-04           330                     0.809  4:      4      2 N05AH04 2022-05-01 2025-09-05     1224                 0              10        2025-04-15           800                     0.654  5:      5      3 N05AH02 2020-02-10 2021-03-23      408                 0              10        2021-02-04           330                     0.809  6:      6      3 N05AH04 2022-05-01 2025-09-05     1224                 0              10        2025-04-15           800                     0.654  7:      7      4 N05AH02 2020-02-10 2021-03-23      408                 0              10        2021-02-04           330                     0.809  8:      8      4 N05AH04 2022-05-01 2025-09-05     1224                 0              10        2025-04-15           800                     0.654  9:      9      5 N05AH02 2020-02-10 2021-03-23      408                 0              10        2021-02-04           330                     0.809 10:     10      5 N05AH04 2022-05-01 2025-09-05     1224                 0              10        2025-04-15           800                     0.654"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pia Vattulainen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vattulainen P (2025). PRE2DUPR: Package PRE2DUP-R method. R package version 0.1.0.","code":"@Manual{,   title = {PRE2DUPR: Package for PRE2DUP-R method},   author = {Pia Vattulainen},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"pre2dup-r","dir":"","previous_headings":"","what":"Package for PRE2DUP-R method","title":"Package for PRE2DUP-R method","text":"program create treatment periods drug purchases data Challenge pharmacoepidemiologic studies: determine drug use periods drug dispensing records Register-based drug dispensing data stored various databases Medicaid Nordic nationwide registers widely used pharmacoepidemiological studies. Valid methods evaluating drug use periods dispensing data needed e.g. studies investigate association drug exposure health-related outcomes hospitalizations death.","code":""},{"path":"/index.html","id":"pre2dup-method","dir":"","previous_headings":"","what":"PRE2DUP method","title":"Package for PRE2DUP-R method","text":"PRE2DUP (prescription drug purchases drug use periods) method novel approach based mathematical modelling personal drug purchasing behaviors. method uses decision procedure utilizes purchased amount Defined Daily Doses (DDDs, defined World Health Organization, ) person’s purchase history constructing exposure time periods dose estimates drug (defined Anatomical Therapeutic Chemical [ATC] codes). method takes account stockpiling drugs, regularity purchases, periods hospital nursing home care drug use recorded databases outpatient medication use. method can applied virtually drug classes drug formulations. Clinically meaningful estimates ensured expert-defined parameters drug package control joining purchases. parameters define e.g. lowest clinically meaningful dose drug package (characterized drug substance, specifics drug formulation, strength number units). method also features tailor drug use periods individual study population, based data individual purchase regularity common patterns drug use studied population.","code":""},{"path":"/index.html","id":"pre2dup-r-1","dir":"","previous_headings":"","what":"PRE2DUP-R","title":"Package for PRE2DUP-R method","text":"growing demand open-source version PRE2DUP programming language software familiar research field. R-package PRE2DUP-R provides advanced tool generating reliable drug use estimates large dispensing databases practical tools data pre-processing cleaning. form basis development sub-programs specific tasks may required particular research fields. information, see introduction method: Tanskanen, ., Taipale, H., Koponen, M., Tolppanen, . M., Hartikainen, S., Ahonen, R., & Tiihonen, J. (2015). prescription drug purchases drug use periods – second generation method (PRE2DUP). BMC medical informatics decision making, 15, 21. https://doi.org/10.1186/s12911-015-0140-z Method validated self-reported drug use, expert-opinion based evaluation postmortem toxicological findings: Taipale, H., Tanskanen, ., Koponen, M., Tolppanen, . M., Tiihonen, J., & Hartikainen, S. (2016). Agreement PRE2DUP register data modeling method comprehensive drug use interview among older persons. Clinical epidemiology, 8, 363–371. https://doi.org/10.2147/CLEP.S116160 Tanskanen, ., Taipale, H., Koponen, M., Tolppanen, . M., Hartikainen, S., Ahonen, R., & Tiihonen, J. (2017). Drug exposure register-based research-expert-opinion based evaluation methods. PloS one, 12(9), e0184070. https://doi.org/10.1371/journal.pone.0184070 Forsman, J., Taipale, H., Masterman, T., Tiihonen, J., & Tanskanen, . (2018). Comparison dispensed medications forensic-toxicological findings assess pharmacotherapy Swedish population 2006 2013. Pharmacoepidemiology drug safety, 27(10), 1112–1122. https://doi.org/10.1002/pds.4426 PRE2DUP used 100 published studies, see example studies using PRE2DUP: Tiihonen, J., Mittendorfer-Rutz, E., Majak, M., Mehtälä, J., Hoti, F., Jedenius, E., Enkusson, D., Leval, ., Sermon, J., Tanskanen, ., & Taipale, H. (2017). Real-World Effectiveness Antipsychotic Treatments Nationwide Cohort 29 823 Patients Schizophrenia. JAMA psychiatry, 74(7), 686–693. https://doi.org/10.1001/jamapsychiatry.2017.1322 Tiihonen, J., Taipale, H., Mehtälä, J., Vattulainen, P., Correll, C. U., & Tanskanen, . (2019). Association Antipsychotic Polypharmacy vs Monotherapy Psychiatric Rehospitalization Among Adults Schizophrenia. JAMA psychiatry, 76(5), 499–507. https://doi.org/10.1001/jamapsychiatry.2018.4320 Taipale, H., Tanskanen, ., Mehtälä, J., Vattulainen, P., Correll, C. U., & Tiihonen, J. (2020). 20-year follow-study physical morbidity mortality relationship antipsychotic treatment nationwide cohort 62,250 patients schizophrenia (FIN20). World psychiatry : official journal World Psychiatric Association (WPA), 19(1), 61–68. https://doi.org/10.1002/wps.20699 Lähteenvuo, M., Tanskanen, ., Taipale, H., Hoti, F., Vattulainen, P., Vieta, E., & Tiihonen, J. (2018). Real-world Effectiveness Pharmacologic Treatments Prevention Rehospitalization Finnish Nationwide Cohort Patients Bipolar Disorder. JAMA psychiatry, 75(4), 347–355. https://doi.org/10.1001/jamapsychiatry.2017.4711 Taipale, H., Schneider-Thoma, J., Pinzón-Espinosa, J., Radua, J., Efthimiou, O., Vinkers, C. H., Mittendorfer-Rutz, E., Cardoner, N., Pintor, L., Tanskanen, ., Tomlinson, ., Fusar-Poli, P., Cipriani, ., Vieta, E., Leucht, S., Tiihonen, J., & Luykx, J. J. (2022). Representation Outcomes Individuals Schizophrenia Seen Everyday Practice Ineligible Randomized Clinical Trials. JAMA psychiatry, 79(3), 210–218. https://doi.org/10.1001/jamapsychiatry.2021.3990 Taipale, H., Solmi, M., Lähteenvuo, M., Tanskanen, ., Correll, C. U., & Tiihonen, J. (2021). Antipsychotic use risk breast cancer women schizophrenia: nationwide nested case-control study Finland. lancet. Psychiatry, 8(10), 883–891. https://doi.org/10.1016/S2215-0366(21)00241-8 Taipale, H., Tanskanen, ., Correll, C. U., & Tiihonen, J. (2022). Real-world effectiveness antipsychotic doses relapse prevention patients first-episode schizophrenia Finland: nationwide, register-based cohort study. lancet. Psychiatry, 9(4), 271–279. https://doi.org/10.1016/S2215-0366(22)00015-3","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 PRE2DUPR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/ATC_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters for ATC Codes — ATC_parameters","title":"Parameters for ATC Codes — ATC_parameters","text":"dataset containing parameters associated ATC (Anatomical Therapeutic Chemical) codes used PRE2DUP-R package.","code":""},{"path":"/reference/ATC_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters for ATC Codes — ATC_parameters","text":"","code":"ATC_parameters"},{"path":"/reference/ATC_parameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameters for ATC Codes — ATC_parameters","text":"`data.frame` `data.table` one row per ATC code. Includes following variables: partial_atc Partial full ATC code (character) lower_ddd_atc Minimum commonly used daily dose (numeric, DDDs) usual_ddd_atc Usual daily dose (numeric, DDDs) minimum_dur_atc Minimum allowed treatment duration (numeric, days) maximum_dur_atc Maximum allowed treatment duration (numeric, days)","code":""},{"path":"/reference/ATC_parameters.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parameters for ATC Codes — ATC_parameters","text":"Parameter set used PRE2DUP-R.","code":""},{"path":"/reference/ATC_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameters for ATC Codes — ATC_parameters","text":"ATC codes may partial complete; program uses closest match ATC code drug purchases. ATC codes appearing drug purchases must included ATC parameters table, least partial-code level. parameters used package-specific information available. See ATC classification https://atcddd.fhi./atc/structure_and_principles/ DDDs https://atcddd.fhi./ddd/definition_and_general_considera/.","code":""},{"path":[]},{"path":"/reference/calc_hosp_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","title":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","text":"Calculates total number hospitalization days (`hosp_days_all`) number hospitalization days started drug exposure (`hosp_days_exp`) purchase period. calculation based overlapping time windows purchase events hospitalization periods, taking account discharge date (included hospital stay).","code":""},{"path":"/reference/calc_hosp_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","text":"","code":"calc_hosp_days(   pre_id,   pre_atc,   curr_purc_start,   exp_end,   next_start,   hosp_id,   hosp_in,   hosp_out )"},{"path":"/reference/calc_hosp_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","text":"pre_id Integer character vector. Person identifier drug purchases data. pre_atc Character vector. ATC codes purchase. curr_purc_start Integer Date vector. Start date drug purchase period. exp_end Integer Date vector. End date drug exposure period. next_start Integer Date vector. Start date next purchase period (may NA last purchase). hosp_id Integer character vector. IDs hospitalization (match `pre_id`). hosp_in Integer Date vector. Admission date hospitalization. hosp_out Integer Date vector. Discharge date hospitalization.","code":""},{"path":"/reference/calc_hosp_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","text":"data.table two columns: hosp_days_all Total number hospitalization days purchase next purchase (including discharge date). hosp_days_exp Number hospitalization days started drug exposure.","code":""},{"path":"/reference/calc_hosp_days.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Hospitalization Days Overlapping with Drug Purchases — calc_hosp_days","text":"function merges drug purchase hospitalization data person ID, calculates overlap purchase periods hospitalizations. Hospital discharge date included total stay. Hospitalization days summed purchase period.","code":""},{"path":"/reference/check_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks Missing or Unvalid Arguments in Function Calls — check_arguments","title":"Checks Missing or Unvalid Arguments in Function Calls — check_arguments","text":"function checks required arguments present function call. compares given arguments main function argument list. raises error required arguments missing, NULL, empty strings stops execution check function. used used internally package ensure necessary arguments provided calling check functions.","code":""},{"path":"/reference/check_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks Missing or Unvalid Arguments in Function Calls — check_arguments","text":"","code":"check_arguments(dt, required_columns, data_name = NULL, ...)"},{"path":"/reference/check_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks Missing or Unvalid Arguments in Function Calls — check_arguments","text":"dt required argument function call datasets. required_columns character vector required column names must present function call. data_name required argument function call datasets. ... arguments passed function call.","code":""},{"path":"/reference/check_atc_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ATC Parameters — check_atc_parameters","title":"Validate ATC Parameters — check_atc_parameters","text":"Anatomical Therapeutic Chemical (ATC) Classification System parameters used define classification drugs daily defined doses (DDD). function checks structure content given ATC parameter file (data.frame data.table) use pre2dup workflows. validation covers required columns, uniqueness, data types, value ranges, logical consistency. function stops execution critical errors found.","code":""},{"path":"/reference/check_atc_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ATC Parameters — check_atc_parameters","text":"","code":"check_atc_parameters(   dt,   atc_class = NULL,   atc_ddd_low = NULL,   atc_ddd_usual = NULL,   atc_dur_min = NULL,   atc_dur_max = NULL,   print_all = FALSE,   return_data = FALSE )"},{"path":"/reference/check_atc_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ATC Parameters — check_atc_parameters","text":"dt data.frame data.table containing ATC parameters validate. atc_class Character. Name column containing ATC class code. atc_ddd_low Character. Name column minimum daily DDD value. atc_ddd_usual Character. Name column usual daily DDD value. atc_dur_min Character. Name column minimum duration (days). atc_dur_max Character. Name column maximum duration (days). print_all Logical. TRUE, warnings printed. return_data Logical. TRUE, function returns validated data. FALSE, message printed.","code":""},{"path":"/reference/check_atc_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ATC Parameters — check_atc_parameters","text":"return_data = TRUE, returns data.table containing validated columns, converted types. errors detected, function stops prints error messages.","code":""},{"path":"/reference/check_atc_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate ATC Parameters — check_atc_parameters","text":"following checks performed: Existence naming required columns Uniqueness ATC class values (duplicates) Validity ATC codes (missing invalid values, correct type) Validity DDD duration values (negative missing values, logical value ranges) Correct order minimum maximum values (duration DDD) errors found, function stops execution prints error messages.","code":""},{"path":"/reference/check_atc_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate ATC Parameters — check_atc_parameters","text":"","code":"atc_data <- data.frame(   atc_class = c(\"A01\", \"A02\", \"A03\"),   atc_ddd_low = c(0.1, 0.2, 0.3),   atc_ddd_usual = c(1, 2, 3),   atc_dur_min = c(10, 28, 35),   atc_dur_max = c(40, 56, 100) ) # Validate and return the data if all checks pass check_atc_parameters(   dt = atc_data,   atc_class = \"atc_class\",   atc_ddd_low = \"atc_ddd_low\",   atc_ddd_usual = \"atc_ddd_usual\",   atc_dur_min = \"atc_dur_min\",   atc_dur_max = \"atc_dur_max\",   print_all = TRUE,   return_data = TRUE ) #> Checks passed for 'atc_data'. #>    atc_class atc_ddd_low atc_ddd_usual atc_dur_min atc_dur_max #>       <char>       <num>         <num>       <num>       <num> #> 1:       A01         0.1             1          10          40 #> 2:       A02         0.2             2          28          56 #> 3:       A03         0.3             3          35         100"},{"path":"/reference/check_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Coverage of Values by ATC Codes — check_coverage","title":"Check Coverage of Values by ATC Codes — check_coverage","text":"Check Coverage Values ATC Codes","code":""},{"path":"/reference/check_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Coverage of Values by ATC Codes — check_coverage","text":"","code":"check_coverage(ATC, val, limit = 90, opti = c(\"missing\", \"zero\"))"},{"path":"/reference/check_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Coverage of Values by ATC Codes — check_coverage","text":"ATC character vector ATC codes. val numeric vector values corresponding ATC codes. limit numeric value representing upper limit coverage percentage. Default 90. opti character string indicating type coverage check perform. can either \"missing\" (check non-missing values) \"zero\" (check values greater zero). Default \"missing\".","code":""},{"path":"/reference/check_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Coverage of Values by ATC Codes — check_coverage","text":"character string listing ATC codes meet coverage limit, formatted \"ATC (coverage","code":""},{"path":"/reference/check_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Date Range — check_date_range","title":"Check Date Range — check_date_range","text":"Checks provided date range valid. ensures date range contains exactly two valid dates starting date ending date. used internally package validate date ranges provided user.","code":""},{"path":"/reference/check_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Date Range — check_date_range","text":"","code":"check_date_range(date_range)"},{"path":"/reference/check_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Date Range — check_date_range","text":"date_range character vector length 2 containing start end dates.","code":""},{"path":"/reference/check_hospitalizations.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Hospitalization Data — check_hospitalizations","title":"Validate Hospitalization Data — check_hospitalizations","text":"function checks structure content hospitalization data (data.frame data.table) use pre2dup workflows. validates required columns, data types, date consistency, chronological logic (admission discharge). checks pass, can return cleaned data.table required columns types.","code":""},{"path":"/reference/check_hospitalizations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Hospitalization Data — check_hospitalizations","text":"","code":"check_hospitalizations(   dt,   hosp_person_id = NULL,   hosp_admission = NULL,   hosp_discharge = NULL,   date_range = NULL,   print_all = FALSE,   return_data = FALSE )"},{"path":"/reference/check_hospitalizations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Hospitalization Data — check_hospitalizations","text":"dt data.frame data.table containing hospitalization records. hosp_person_id Character. Column name person identifier. hosp_admission Character. Column name hospital admission date. hosp_discharge Character. Column name hospital discharge date. date_range Character vector length 2. Date range hospitalizations (e.g., c(\"1995-01-01\", \"2025-12-31\")). Default NULL (date range check). print_all Logical. TRUE, row numbers caused warnings printed; FALSE, first 5 problematic rows printed. return_data Logical. TRUE errors detected, returns data.table validated columns proper types. FALSE, message printed.","code":""},{"path":"/reference/check_hospitalizations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Hospitalization Data — check_hospitalizations","text":"return_data = TRUE, returns data.table containing validated columns, dates converted integer overlapping hospitalizations combined. errors detected, function stops prints error messages.","code":""},{"path":"/reference/check_hospitalizations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Hospitalization Data — check_hospitalizations","text":"following checks performed: Existence naming required columns Validity person identifiers (numeric non-numeric, missing values) Admission discharge dates present convertible date Admission date strictly discharge date dates within specified range (given) Overlapping hospitalizations combined errors found, function stops execution prints error messages.","code":""},{"path":"/reference/check_hospitalizations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Hospitalization Data — check_hospitalizations","text":"","code":"PID <- c(1, 1, 2, 2) Entry <- c(\"2023-01-01\", \"2023-02-01\", \"2023-01-01\", \"2023-02-01\") Leave <- c(\"2023-01-15\", \"2023-02-15\", \"2023-01-10\", \"2023-02-10\") hospital_data <- data.frame(PID, Entry, Leave)  hospitalizations <- check_hospitalizations(   hospital_data,   hosp_person_id = \"PID\",   hosp_admission = \"Entry\",   hosp_discharge = \"Leave\",   return_data = TRUE ) #> Checks passed for 'hospital_data' hospitalizations #> Key: <pid_hosp> #>    pid_hosp admission_date discharge_date #>      <fctr>          <int>          <int> #> 1:        1          19358          19372 #> 2:        1          19389          19403 #> 3:        2          19358          19367 #> 4:        2          19389          19398"},{"path":"/reference/check_non_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Non-Numeric Values — check_non_numeric","title":"Check Non-Numeric Values — check_non_numeric","text":"function checks character vector non-numeric values. returns indices elements either NA match alphanumeric pattern. used internally package validate character columns expected contain alphanumeric values.","code":""},{"path":"/reference/check_non_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Non-Numeric Values — check_non_numeric","text":"","code":"check_non_numeric(col)"},{"path":"/reference/check_non_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Non-Numeric Values — check_non_numeric","text":"col character vector checked non-numeric values.","code":""},{"path":"/reference/check_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Numeric Values — check_numeric","title":"Check Numeric Values — check_numeric","text":"function checks numeric vector invalid values. identifies indices elements infinite, negative, NA (allowed), zero (allowed). used internally package validate numeric columns expected contain valid non-negative numbers.","code":""},{"path":"/reference/check_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Numeric Values — check_numeric","text":"","code":"check_numeric(col, allow_na = FALSE, allow_zero = FALSE)"},{"path":"/reference/check_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Numeric Values — check_numeric","text":"col numeric vector checked invalid values. allow_na logical value indicating whether NA values allowed. Default FALSE. allow_zero logical value indicating whether zero values allowed. Default FALSE.","code":""},{"path":"/reference/check_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Numeric Values — check_numeric","text":"vector indices numeric values invalid (.e., infinite, negative, NA, zero allowed).","code":""},{"path":"/reference/check_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Order of Values — check_order","title":"Check Order of Values — check_order","text":"function checks order maximum three numeric vectors: lower, usual, upper. returns indices order incorrect (.e., lower > upper, lower > usual, usual > upper). used internally package validate order values ATC package parameters.","code":""},{"path":"/reference/check_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Order of Values — check_order","text":"","code":"check_order(lower, usual = NULL, upper)"},{"path":"/reference/check_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Order of Values — check_order","text":"lower numeric vector representing lower limit. usual numeric vector representing usual value (optional). upper numeric vector representing upper limit.","code":""},{"path":"/reference/check_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Order of Values — check_order","text":"vector indices order values incorrect (.e., lower > upper, lower > usual, usual > upper).","code":""},{"path":"/reference/check_package_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Package Parameters — check_package_parameters","title":"Validate Package Parameters — check_package_parameters","text":"function checks structure content given package parameter file (data.frame data.table) use pre2dup workflows. validation covers required columns, uniqueness, data types, value ranges, logical consistency. function stops execution prints error messages critical errors found.","code":""},{"path":"/reference/check_package_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Package Parameters — check_package_parameters","text":"","code":"check_package_parameters(   dt,   pack_atc = NULL,   pack_id = NULL,   pack_ddd_low = NULL,   pack_ddd_usual = NULL,   pack_dur_min = NULL,   pack_dur_usual = NULL,   pack_dur_max = NULL,   print_all = FALSE,   return_data = FALSE )"},{"path":"/reference/check_package_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Package Parameters — check_package_parameters","text":"dt data.frame data.table containing package parameters validate. pack_atc Character. Name column containing Anatomical Therapeutic Chemical (ATC) Classification code. pack_id Character. Name column containing package identifier (e.g., vnr code). pack_ddd_low Character. Name column minimum daily DDD value. pack_ddd_usual Character. Name column usual daily DDD value. pack_dur_min Character. Name column minimum package duration (days). pack_dur_usual Character. Name column usual package duration (days). pack_dur_max Character. Name column maximum package duration (days). print_all Logical. TRUE, warnings printed. FALSE, first 5 problematic rows printed. return_data Logical. TRUE errors detected, returns data.table validated columns proper types. FALSE, message printed.","code":""},{"path":"/reference/check_package_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Package Parameters — check_package_parameters","text":"return_data = TRUE, returns data.table containing validated columns, converted types. errors detected, function stops prints error messages.","code":""},{"path":"/reference/check_package_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Package Parameters — check_package_parameters","text":"following checks performed: Existence naming required columns Uniqueness package identifiers (duplicates) Validity ATC codes (missing invalid values, correct type) Validity package IDs (numeric, missing values) Validity DDD duration values (negative missing values, logical value ranges) Correct order minimum, usual, maximum durations Correct order minimum usual DDD values errors found, function stops execution prints error messages.","code":""},{"path":"/reference/check_package_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Package Parameters — check_package_parameters","text":"","code":"ATC <- c(\"N05AA01\", rep(\"N05AH03\", 3), \"N05AX13\") vnr <- c(141473, 80307, 145698, 457780 , 412581) lower_ddd = c(0.167, 0.500, 0.500, 0.375, 0.714) usual_ddd <- c(0.33, 1.00, 1.00, 0.75, 1.00) minimum_duration <- c(33, 9.3, 9.3, 33.3, 14) usual_duration <- c(100, 28, 28, 100, 30) maximum_duration <- c(200, 56, 56, 200, 42) df_pack_params <- data.frame(ATC, vnr, lower_ddd, usual_ddd,   minimum_duration, usual_duration, maximum_duration)  package_parameters <- check_package_parameters(   dt = df_pack_params,   pack_atc = \"ATC\",   pack_id = \"vnr\",   pack_ddd_low = \"lower_ddd\",   pack_ddd_usual = \"usual_ddd\",   pack_dur_min = \"minimum_duration\",   pack_dur_usual = \"usual_duration\",   pack_dur_max = \"maximum_duration\",   return_data = TRUE ) #> Checks passed for 'df_pack_params' package_parameters #>        ATC    vnr lower_ddd usual_ddd minimum_duration usual_duration #>     <char>  <int>     <num>     <num>            <num>          <num> #> 1: N05AA01 141473     0.167      0.33             33.0            100 #> 2: N05AH03  80307     0.500      1.00              9.3             28 #> 3: N05AH03 145698     0.500      1.00              9.3             28 #> 4: N05AH03 457780     0.375      0.75             33.3            100 #> 5: N05AX13 412581     0.714      1.00             14.0             30 #>    maximum_duration #>               <num> #> 1:              200 #> 2:               56 #> 3:               56 #> 4:              200 #> 5:               42"},{"path":"/reference/check_purchases.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Drug Purchase Data — check_purchases","title":"Validate Drug Purchase Data — check_purchases","text":"function checks structure content drug purchase data (data.frame data.table) use pre2dup workflows. helps users detect errors advance, missing invalid records, incorrect formats, dates outside specified range. checks pass, function can return validated data.table required columns proper types.","code":""},{"path":"/reference/check_purchases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Drug Purchase Data — check_purchases","text":"","code":"check_purchases(   dt,   pre_person_id = NULL,   pre_atc = NULL,   pre_package_id = NULL,   pre_date = NULL,   pre_ratio = NULL,   pre_ddd = NULL,   date_range = NULL,   print_all = FALSE,   return_data = FALSE )"},{"path":"/reference/check_purchases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Drug Purchase Data — check_purchases","text":"dt data.frame data.table containing drug purchase records. pre_person_id Character. Column name person identifier. pre_atc Character. Column name ATC code. pre_package_id Character. Column name package identifier (e.g., Vnr Nordic data). pre_date Character. Column name drug purchase date. pre_ratio Character. Column name amount drug purchased: whole packages, number packages; partial supplies, proportion package (e.g., 0.5 14 tablets 28-tablet package). pre_ddd Character. Column name defined daily dose (DDD) purchase. date_range Character vector length 2. Date range purchase dates (e.g., c(\"1995-01-01\", \"2018-12-31\")). Default NULL (date range check). print_all Logical. TRUE, row numbers caused warnings printed; FALSE, first 5 problematic rows printed. return_data Logical. TRUE errors detected, returns data.table validated columns proper types. FALSE, message printed.","code":""},{"path":"/reference/check_purchases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Drug Purchase Data — check_purchases","text":"return_data = TRUE, returns data.table containing validated columns, converted types. errors detected, function stops prints error messages.","code":""},{"path":"/reference/check_purchases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Drug Purchase Data — check_purchases","text":"following checks performed: Existence naming required columns missing duplicated records package unique ATC code Validity person identifiers (numeric non-numeric, missing values) Validity ATC codes (missing invalid values) Validity package IDs purchase ratio (numeric, missing values) DDD values: missing allowed, zero negative purchase dates must present, convertible, within specified range (given) Sufficient DDD coverage per ATC (user confirmation threshold) errors found, function stops execution prints error messages.","code":""},{"path":"/reference/check_purchases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Drug Purchase Data — check_purchases","text":"","code":"ID <- c(rep(100001, 3), rep(100002, 3)) ATC <- c(rep(\"N06AX11\", 3), rep(\"N05AH03\", 3)) vnr <- c(rep(48580, 3), rep(145698, 3)) dates <- as.Date(c(\"1998-07-04\",\"1998-07-27\",\"1998-08-28\", \"2000-01-12\", \"2000-02-05\",\"2000-02-24\")) ratios <- c(0.5, 2, 2, 1, 0.5, 2) ddds <- c(7.5, 30, 30, 28, 14, 56) purchases <- data.frame(ID, ATC, vnr, dates, ratios, ddds)  check_purchases(   dt = purchases,   pre_person_id = \"ID\",   pre_atc = \"ATC\",   pre_package_id = \"vnr\",   pre_date = \"dates\",   pre_ratio = \"ratios\",   pre_ddd = \"ddds\",   date_range = c(\"1995-01-01\", \"2018-12-31\"),   print_all = TRUE,   return_data = TRUE ) #> Checks passed for 'purchases' #>        ID     ATC    vnr      dates ratios  ddds date_pre #>    <fctr>  <char>  <int>     <Date>  <num> <num>    <int> #> 1: 100001 N06AX11  48580 1998-07-04    0.5   7.5    10411 #> 2: 100001 N06AX11  48580 1998-07-27    2.0  30.0    10434 #> 3: 100001 N06AX11  48580 1998-08-28    2.0  30.0    10466 #> 4: 100002 N05AH03 145698 2000-01-12    1.0  28.0    10968 #> 5: 100002 N05AH03 145698 2000-02-05    0.5  14.0    10992 #> 6: 100002 N05AH03 145698 2000-02-24    2.0  56.0    11011"},{"path":"/reference/combine_overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Overlapping Hospitalizations — combine_overlaps","title":"Combine Overlapping Hospitalizations — combine_overlaps","text":"Combine Overlapping Hospitalizations","code":""},{"path":"/reference/combine_overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Overlapping Hospitalizations — combine_overlaps","text":"","code":"combine_overlaps(personid, admission, discharge)"},{"path":"/reference/combine_overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Overlapping Hospitalizations — combine_overlaps","text":"personid vector person identifiers hospitalization data. admission vector admission dates. discharge vector discharge dates.","code":""},{"path":"/reference/combine_overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Overlapping Hospitalizations — combine_overlaps","text":"data.table combined hospitalizations, overlapping hospitalizations merged single records.","code":""},{"path":"/reference/date_to_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Date to Integer — date_to_integer","title":"Convert Date to Integer — date_to_integer","text":"function converts date-like object (Date, character, factor, numeric) integer representing number days since 1970-01-01. handles various formats returns NA_integer_ NA inputs. used internally package ensure consistent date handling.","code":""},{"path":"/reference/date_to_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Date to Integer — date_to_integer","text":"","code":"date_to_integer(x)"},{"path":"/reference/date_to_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Date to Integer — date_to_integer","text":"x date-like object (Date, character, factor, numeric).","code":""},{"path":"/reference/date_to_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Date to Integer — date_to_integer","text":"integer representing date days since 1970-01-01, NA_integer_ input NA.","code":""},{"path":"/reference/err_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Creation of Error Message — err_message","title":"Creation of Error Message — err_message","text":"function creates error message missing arguments columns function call. used internally package provide informative error messages required arguments columns provided.","code":""},{"path":"/reference/err_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creation of Error Message — err_message","text":"","code":"err_message(miss, error, arg_or_col = c(\"argument\", \"column\"))"},{"path":"/reference/err_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creation of Error Message — err_message","text":"miss character vector missing arguments columns. error character string describing error. arg_or_col character string indicating whether missing items arguments columns. can either \"argument\" \"column\". default \"argument\"","code":""},{"path":"/reference/err_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creation of Error Message — err_message","text":"character string containing formatted error message.","code":""},{"path":"/reference/extract_atc_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ATC Codes from Text — extract_atc_codes","title":"Extract ATC Codes from Text — extract_atc_codes","text":"function extracts ATC codes character vector containing text formatted \"ATC code (percentage)\". uses regular expression find ATC codes parentheses. Function internal use creating error messages package.","code":""},{"path":"/reference/extract_atc_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ATC Codes from Text — extract_atc_codes","text":"","code":"extract_atc_codes(text)"},{"path":"/reference/extract_atc_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ATC Codes from Text — extract_atc_codes","text":"text character vector containing text ATC codes need extracted. expected format \"ATC code (percentage)\".","code":""},{"path":"/reference/extract_atc_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ATC Codes from Text — extract_atc_codes","text":"character vector extracted ATC codes. matches found, returns empty character vector.","code":""},{"path":"/reference/find_multiple_atcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Multiple ATC Codes — find_multiple_atcs","title":"Find Multiple ATC Codes — find_multiple_atcs","text":"function checks package single ATC code. counts unique ATC codes package raises error package one ATC code. used internally package ensure data integrity. Function internal use creating error messages package.","code":""},{"path":"/reference/find_multiple_atcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Multiple ATC Codes — find_multiple_atcs","text":"","code":"find_multiple_atcs(atc_col, package_col)"},{"path":"/reference/find_multiple_atcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Multiple ATC Codes — find_multiple_atcs","text":"atc_col character vector containing ATC codes. package_col integer vector containing package identifiers corresponding ATC codes.","code":""},{"path":"/reference/find_multiple_atcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Multiple ATC Codes — find_multiple_atcs","text":"invisible NULL packages single ATC code, otherwise raises error message listing packages multiple ATC codes.","code":""},{"path":"/reference/hospitalizations_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example hospitalization data — hospitalizations_example","title":"Example hospitalization data — hospitalizations_example","text":"synthetic dataset containing hospitalization periods two individuals. Intended testing hospital stays affect drug exposure estimation PRE2DUP-R package.","code":""},{"path":"/reference/hospitalizations_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example hospitalization data — hospitalizations_example","text":"","code":"hospitalizations_example"},{"path":"/reference/hospitalizations_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example hospitalization data — hospitalizations_example","text":"`data.table` following variables: id Person identifier (integer) hospital_start Start date hospitalization period (Date) hospital_end End date hospitalization period (Date)","code":""},{"path":"/reference/hospitalizations_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example hospitalization data — hospitalizations_example","text":"Simulated data created package documentation.","code":""},{"path":"/reference/hospitalizations_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example hospitalization data — hospitalizations_example","text":"data can used test PRE2DUP-R handles inpatient periods outpatient medications used.","code":""},{"path":[]},{"path":"/reference/make_warning.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Warning Message — make_warning","title":"Make Warning Message — make_warning","text":"function creates warning message specific condition data. formats message include column names involved, number rows affected, specific row numbers warning applies. used internally package provide informative warnings certain conditions met.","code":""},{"path":"/reference/make_warning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Warning Message — make_warning","text":"","code":"make_warning(errorws, colvars, warning_message, print_all = TRUE)"},{"path":"/reference/make_warning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Warning Message — make_warning","text":"errorws vector row numbers warning applies. colvars character vector column names involved warning. warning_message character string containing warning message included output. print_all logical value indicating whether print rows warnings truncate output first 5 rows. Default TRUE.","code":""},{"path":"/reference/mode_calculation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the most common duration between purchases — mode_calculation","title":"Calculates the most common duration between purchases — mode_calculation","text":"Calculates mode time intervals purchases package. Intervals within 2 days grouped together. common (modal) interval selected grouped values. multiple modes exist, one closest median chosen; still tie, one closest mean selected. Intended internal use PRE2DUP-R package.","code":""},{"path":"/reference/mode_calculation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the most common duration between purchases — mode_calculation","text":"","code":"mode_calculation(pack_id, pre_ratio, dur, report_iters = 50)"},{"path":"/reference/mode_calculation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the most common duration between purchases — mode_calculation","text":"pack_id vector package identifiers pre_ratio vector package ratios, .e. number packages partial packages allowed dur vector times purchases","code":""},{"path":"/reference/mode_calculation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the most common duration between purchases — mode_calculation","text":"data.table common duration purchases","code":""},{"path":"/reference/package_parameters_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of package parameters — package_parameters_example","title":"Example of package parameters — package_parameters_example","text":"example dataset package parameters.","code":""},{"path":"/reference/package_parameters_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of package parameters — package_parameters_example","text":"","code":"package_parameters_example"},{"path":"/reference/package_parameters_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of package parameters — package_parameters_example","text":"`data.frame` following variables: vnr Package identifier purchased product, Nordic article number (Vnr) example (numeric) ATC Anatomical Therapeutic Chemical (ATC) classification code (character) product_name Product name (character) strength Strength drug format register may deliver, including e.g. drug strength value type (e.g. mg) (character) strength_num Numeric strength drug, extracted strength (numeric) packagesize Package size format register may deliver, including e.g. number type units (character) packsize_num Number units extracted packagesize (numeric) drug_form_harmonized Harmonized drug format (e.g. 'tabs' 'pills' recorded 'TABLET') (character) ddd_per_pack Number Defined Daily Doses (DDDs) package (numeric) minimum_dur Minimum duration package (numeric) usual_dur Usual duration package (numeric) maximum_dur Maximum duration package (numeric) lower_ddd Lower limit daily dose package DDDs (numeric) usual_ddd Usual daily dose package DDDs (numeric)","code":""},{"path":"/reference/package_parameters_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example of package parameters — package_parameters_example","text":"Package parameters created PRE2DUP-R example.","code":""},{"path":"/reference/package_parameters_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of package parameters — package_parameters_example","text":"PRE2DUP-R uses package-specific information estimate drug exposure. Example parameters can used template creation study specific package parameter file. PRE2DUP-R requires package identifier, minimum, usual maximum duration package, daily dose's lower limit usual daily dose, daily DDDs. included information creating required variables. See Package Parameters Tutorials guidance. See ATC classification https://atcddd.fhi./atc/structure_and_principles/ DDDs https://atcddd.fhi./ddd/definition_and_general_considera/.","code":""},{"path":[]},{"path":"/reference/pre2dup.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"Estimates drug use periods based individual drug purchase data. Optionally, hospitalization data can incorporated. estimation uses package-specific Anatomical Therapeutic Chemical (ATC) Classification code -level parameters. function supports estimation individuals varied purchase patterns, including stockpiling behavior.","code":""},{"path":"/reference/pre2dup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"","code":"pre2dup(   pre_data,   pre_person_id,   pre_atc,   pre_package_id,   pre_date,   pre_ratio,   pre_ddd,   package_parameters,   pack_atc,   pack_id,   pack_ddd_low,   pack_ddd_usual,   pack_dur_min,   pack_dur_usual,   pack_dur_max,   atc_parameters,   atc_class,   atc_ddd_low,   atc_ddd_usual,   atc_dur_min,   atc_dur_max,   hosp_data = NULL,   hosp_person_id = NULL,   hosp_admission = NULL,   hosp_discharge = NULL,   date_range = NULL,   global_gap_max = 300,   global_min = 5,   global_max = 300,   global_max_single = 150,   global_ddd_high = 10,   global_hosp_max = 30,   days_covered = 5,   weight_past = 1,   weight_current = 4,   weight_next = 1,   weight_first_last = 5,   calculate_pack_dur_usual = FALSE,   post_process_perc = 1 )"},{"path":"/reference/pre2dup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"pre_data data.frame data.table containing drug purchases. pre_person_id character, name column containing person id. pre_atc character, name column containing ATC code. pre_package_id character, name column containing package id. pre_date character, name column containing purchase date. pre_ratio character, name column containing ratio packages purchased (e.g., number packages). pre_ddd character, name column containing defined daily doses (DDD) purchase. package_parameters data.frame data.table containing package parameters. pack_atc character, name column containing ATC code. pack_id character, name column containing package id. pack_ddd_low character, name column containing lower limit daily DDD. pack_ddd_usual character, name column containing usual daily DDD. pack_dur_min character, name column containing minimum duration package. pack_dur_usual character, name column containing usual duration package. pack_dur_max character, name column containing maximum duration package. atc_parameters data.frame data.table containing ATC parameters. atc_class character, name column containing ATC class. atc_ddd_low character, name column containing lower limit daily DDD ATC class. atc_ddd_usual character, name column containing usual daily DDD ATC class. atc_dur_min character, name column containing minimum duration ATC class. atc_dur_max character, name column containing maximum duration ATC class. hosp_data data.frame data.table containing hospitalizations. hosp_person_id character, name column containing person id. hosp_admission character, name column containing admission date. hosp_discharge character, name column containing discharge date. date_range character, vector two dates, start end purchase data. global_gap_max numeric, maximum gap purchases, default 300.. global_min numeric, minimum duration purchase, default 5. global_max numeric, maximum duration purchase, default 300. global_max_single numeric, maximum duration single purchase, default 150. global_ddd_high numeric, maximum daily DDD purchase per day ATC, default 10. global_hosp_max numeric, maximum number hospital days considered estimating exposure duration, default 30. days_covered numeric, maximum number days added exposure duration cover gap purchases, default 5. weight_past numeric, weight past purchase sliding average calculation, default 1. weight_current numeric, weight current purchase sliding average calculation, default 4. weight_next numeric, weight next purchase sliding average calculation, default 1. weight_first_last numeric, weight first last purchase sliding average calculation, default 5. calculate_pack_dur_usual TRUE FALSE, re-calculate usual duration package based purchase frequency data, default FALSE. post_process_perc numeric, percentage data used post-processing, default 1.","code":""},{"path":"/reference/pre2dup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"list two elements. Main element periods: data.table one row per drug use period, including person, ATC, period start/end dates, duration, number purchases, total DDD. calculate_pack_dur_usual = TRUE, additional element pack_info contains updated package parameter information.","code":""},{"path":"/reference/pre2dup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"starting estimate drug use periods, function validates input data arguments checking missing values unacceptable duplicates. stop execution issues detected, following exceptions: 10% missing DDD values per ATC class drug purchase data allowed. 10% missing package parameter records per ATC class allowed. either threshold exceeded, function prompts user decide whether continue. user agrees, ATC classes insufficient data excluded, function proceeds remaining data. five available methods estimating duration purchase, presented order preference: Main method: Based purchased daily doses (DDDs), temporal average daily DDDs, individual purchase patterns. Package DDD method: Based purchased DDDs usual daily DDD specific package. Package duration method: Based usual duration package, considering proportion package purchased. ATC-level DDD method: Based purchased DDDs usual daily DDDs ATC level. Minimum ATC duration method: Based minimum duration defined ATC group. Periods close time can joined post-processing step controlled post_process_perc. Post processing percentage reduces 0.1 estimation round prevent long calculation times large datasets. addition estimating drug use periods, function can also calculate common package durations purchase data. calculated durations can used verify adjust usual duration parameters packages. making corrections, re-run function recalculate drug use periods using updated package parameters.","code":""},{"path":[]},{"path":"/reference/pre2dup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Drug Use Periods from Drug Purchase Data — pre2dup","text":"","code":"period_data <-pre2dup(pre_data = purchases_example, pre_person_id = \"id\",  pre_atc = \"ATC\", pre_package_id = \"vnr\", pre_date = \"purchase_date\",   pre_ratio = \"n_packages\", pre_ddd = \"amount\",    package_parameters = package_parameters_example,     pack_atc = \"ATC\", pack_id = \"vnr\", pack_ddd_low = \"lower_ddd\",      pack_ddd_usual =\"usual_ddd\", pack_dur_min = \"minimum_dur\",       pack_dur_usual = \"usual_dur\", pack_dur_max = \"maximum_dur\",        atc_parameters = ATC_parameters, atc_class = \"partial_atc\",        atc_ddd_low = \"lower_ddd_atc\", atc_ddd_usual = \"usual_ddd_atc\",         atc_dur_min = \"minimum_dur_atc\", atc_dur_max = \"maximum_dur_atc\",          hosp_data = hospitalizations_example, hosp_person_id = \"id\",           hosp_admission = \"hospital_start\", hosp_discharge = \"hospital_end\",            date_range = c(\"2025-01-01\", \"2025-12-31\"),             global_gap_max = 300, global_min = 5, global_max = 300,              global_max_single = 150, global_ddd_high = 10,               global_hosp_max = 30, weight_past = 1, weight_current = 4,                weight_next = 1, weight_first_last = 5,                 calculate_pack_dur_usual = TRUE,                  days_covered = 5,                  post_process_perc = 1) #> Step 1/6: Checking parameters and datasets... #> Checks passed for 'pre_data' #> Checks passed for 'package_parameters' #> Checks passed for 'atc_parameters'. #> Checks passed for 'hosp_data' #> Step 2/6: Calculating purchase durations... #> Step 3/6: Stockpiling assessment... #> Step 4/6: Calculating common package durations in data... #> Refill lengths couldn't be re-estimated, probably due to too small data size. #> Step 5/6: Preparing drug use periods... #> Step 6/6: Post-processing drug use periods... #> Current post processing percentage: 1 #> Drug use periods calculated. 7 periods created for 5 persons.  period_data$periods #>    period     id     ATC  dup_start    dup_end dup_days dup_hospital_days #>     <int> <fctr>  <char>     <Date>     <Date>    <num>             <num> #> 1:      1      1 N05AH02 2025-01-01 2025-04-14      104                 0 #> 2:      2      2 N05AH02 2025-01-15 2025-04-28      104                 5 #> 3:      3      3 N05AH02 2025-02-01 2025-05-15      104                 0 #> 4:      4      3 N05AH04 2025-01-05 2025-08-26      233                 0 #> 5:      5      4 N05AH02 2025-01-10 2025-04-23      104                 0 #> 6:      6      4 N05AH04 2025-01-20 2025-09-10      233                 0 #> 7:      7      5 N05AH04 2025-01-01 2025-08-22      233                38 #>    dup_n_purchases dup_last_purchase dup_total_DDD dup_temporal_average_DDDs #>              <int>            <Date>         <num>                     <num> #> 1:               3        2025-03-08         99.99                     0.961 #> 2:               3        2025-03-22         99.99                     0.961 #> 3:               3        2025-04-08         99.99                     0.961 #> 4:               2        2025-04-15        200.00                     0.858 #> 5:               3        2025-03-17         99.99                     0.961 #> 6:               2        2025-04-30        200.00                     0.858 #> 7:               2        2025-04-11        200.00                     0.858"},{"path":"/reference/purchases_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example drug purchase data — purchases_example","title":"Example drug purchase data — purchases_example","text":"synthetic dataset containing drug purchase records five individuals two medications, intended demonstration testing PRE2DUP-R package.","code":""},{"path":"/reference/purchases_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example drug purchase data — purchases_example","text":"","code":"purchases_example"},{"path":"/reference/purchases_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example drug purchase data — purchases_example","text":"`data.frame` `data.table` following variables: id Person identifier (integer) vnr Package identifier purchased product, Nordic article number (Vnr) example (character) ATC Anatomical Therapeutic Chemical (ATC) classification code (character) purchase_date Date purchase (Date) n_packages Amount purchased product, number packages example (numeric) amount Estimated total DDDs purchase (numeric)","code":""},{"path":"/reference/purchases_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example drug purchase data — purchases_example","text":"Simulated data created package documentation.","code":""},{"path":"/reference/purchases_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example drug purchase data — purchases_example","text":"See ATC classification https://atcddd.fhi./atc/structure_and_principles/ DDDs https://atcddd.fhi./ddd/definition_and_general_considera/.","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial release","title":"PRE2DUPR 0.1.0","text":"First release package. Provides tools creating drug use periods medication purchase data. Includes also functions checking validating data program uses. Planned updates: - Documentation PRE2DUPR methodology","code":""}]
